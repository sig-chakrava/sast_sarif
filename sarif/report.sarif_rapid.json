{
    "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
    "runs": [
        {
            "tool": {
                "driver": {
                    "name": "Polaris",
                    "organization": "Black Duck",
                    "rules": [
                        {
                            "id": "sigma.container_filesystem_write:docker_compose|yaml",
                            "shortDescription": {
                                "text": "Improper Isolation or Compartmentalization"
                            },
                            "fullDescription": {
                                "text": "The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."
                            },
                            "help": {
                                "markdown": "\n## Description\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DImproper%20Isolation%20or%20Compartmentalization%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Break up privileges between different modules, objects, or entities. Minimize the interfaces between modules and require strong access control between them.\n\n## References\n* Common Weakness Enumeration: [CWE-552](https://cwe.mitre.org/data/definitions/552.html)\n\n",
                                "text": "The docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."
                            },
                            "properties": {
                                "security-severity": "3.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-552"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            }
                        },
                        {
                            "id": "sigma.container_privilege_escalation_allowed:docker_compose|yaml",
                            "shortDescription": {
                                "text": "Kubernetes Privilege Escalation"
                            },
                            "fullDescription": {
                                "text": "The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."
                            },
                            "help": {
                                "markdown": "\n## Description\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DKubernetes%20Privilege%20Escalation%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\n\n\n## References\n* Common Weakness Enumeration: [CWE-269](https://cwe.mitre.org/data/definitions/269.html)\n\n",
                                "text": "The Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."
                            },
                            "properties": {
                                "security-severity": "3.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-269"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            }
                        },
                        {
                            "id": "sigma.container_requesting_net_raw:docker_compose|yaml",
                            "shortDescription": {
                                "text": "Least Privilege Violation"
                            },
                            "fullDescription": {
                                "text": "The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."
                            },
                            "help": {
                                "markdown": "\n## Description\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DLeast%20Privilege%20Violation%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.\n  2. Follow the principle of least privilege when assigning access rights to entities in a software system.\n  3. Compartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n\n## References\n* Common Weakness Enumeration: [CWE-269](https://cwe.mitre.org/data/definitions/269.html)\n\n",
                                "text": "The Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."
                            },
                            "properties": {
                                "security-severity": "8.9",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-269"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            }
                        },
                        {
                            "id": "sigma.exposed_secret:ssh_keys|unknown",
                            "shortDescription": {
                                "text": "Client Store Exposure"
                            },
                            "fullDescription": {
                                "text": "A private SSH key is exposed in the application repository or codebase."
                            },
                            "help": {
                                "markdown": "\n## Description\nA private SSH key is exposed in the application repository or codebase.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DClient%20Store%20Exposure%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n\n",
                                "text": "A private SSH key is exposed in the application repository or codebase."
                            },
                            "properties": {
                                "security-severity": "6.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-200"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            }
                        },
                        {
                            "id": "sigma.expression_escaping_disabled:swig|javascript",
                            "shortDescription": {
                                "text": "Expression Escaping"
                            },
                            "fullDescription": {
                                "text": "Setting the `autoescape` attribute to `false` disables the escaping mechanism of the Swig template engine. This may lead to XSS attack if untrusted data is not properly validated and escaped."
                            },
                            "help": {
                                "markdown": "\n## Description\nSetting the `autoescape` attribute to `false` disables the escaping mechanism of the Swig template engine. This may lead to XSS attack if untrusted data is not properly validated and escaped.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DExpression%20Escaping%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\n\n\n## References\n* Common Weakness Enumeration: [CWE-116](https://cwe.mitre.org/data/definitions/116.html)\n\n",
                                "text": "Setting the `autoescape` attribute to `false` disables the escaping mechanism of the Swig template engine. This may lead to XSS attack if untrusted data is not properly validated and escaped."
                            },
                            "properties": {
                                "security-severity": "6.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-116"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            }
                        },
                        {
                            "id": "sigma.hardcoded_secret:pattern_low|javascript",
                            "shortDescription": {
                                "text": "Hard-coded Secrets in Server-side Code"
                            },
                            "fullDescription": {
                                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                            },
                            "help": {
                                "markdown": "\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DHard-coded%20Secrets%20in%20Server-side%20Code%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nSensitive information such as access credentials, passwords, and cryptographic keys should not be stored in the source code. Always store secrets outside the source code. When possible, keep them in a strongly-protected, encrypted configuration file or database that is protected \nfrom access by all outsiders, including other local users on the same system.\n\nOne solution is to encrypt passwords within the properties file and store the key in a safe location. This is especially necessary if people other than the administrators have access to the properties file. Upon encryption, if different people need access to the properties file, access to the encryption key should be restricted. There are different options to implement such solutions depending on the deployment scenario. For example, on Windows you may consider using the Data Protection API (DPAPI or the newer DPAPI-NG).\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n",
                                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                            },
                            "properties": {
                                "security-severity": "3.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-798"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            }
                        },
                        {
                            "id": "sigma.hardcoded_secret:pattern_low|json",
                            "shortDescription": {
                                "text": "Hard-coded Secrets in Server-side Code"
                            },
                            "fullDescription": {
                                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                            },
                            "help": {
                                "markdown": "\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DHard-coded%20Secrets%20in%20Server-side%20Code%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nSensitive information such as access credentials, passwords, and cryptographic keys should not be stored in the source code. Always store secrets outside the source code. When possible, keep them in a strongly-protected, encrypted configuration file or database that is protected \nfrom access by all outsiders, including other local users on the same system.\n\nOne solution is to encrypt passwords within the properties file and store the key in a safe location. This is especially necessary if people other than the administrators have access to the properties file. Upon encryption, if different people need access to the properties file, access to the encryption key should be restricted. There are different options to implement such solutions depending on the deployment scenario. For example, on Windows you may consider using the Data Protection API (DPAPI or the newer DPAPI-NG).\n\n## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n\n",
                                "text": "A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                            },
                            "properties": {
                                "security-severity": "3.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-798"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            }
                        },
                        {
                            "id": "sigma.least_privilege_violation:docker_compose|yaml",
                            "shortDescription": {
                                "text": "Improper Access Control"
                            },
                            "fullDescription": {
                                "text": "The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."
                            },
                            "help": {
                                "markdown": "\n## Description\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.\n  2. Compartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.\n\nEnsure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.\n\n## References\n* Common Weakness Enumeration: [CWE-284](https://cwe.mitre.org/data/definitions/284.html)\n\n",
                                "text": "The Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."
                            },
                            "properties": {
                                "security-severity": "3.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-284"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            }
                        },
                        {
                            "id": "sigma.missing_iframe_sandbox:html|html",
                            "shortDescription": {
                                "text": "Clickjacking"
                            },
                            "fullDescription": {
                                "text": "The `sandbox` attribute of an `iframe` is not set in HTML. This iframe loads content from a third-party site. If the JavaScript in that iframe is malicious or was compromised, an attacker can break out of the iframe, access the DOM of the main page, and mount a clickjacking or a phishing attack."
                            },
                            "help": {
                                "markdown": "\n## Description\nThe `sandbox` attribute of an `iframe` is not set in HTML. This iframe loads content from a third-party site. If the JavaScript in that iframe is malicious or was compromised, an attacker can break out of the iframe, access the DOM of the main page, and mount a clickjacking or a phishing attack.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DClickjacking%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nThe recommended remediation depends on the required use case, which generally falls within one of three scenarios. These scenarios are described in more detail below.\n\nScenario 1 - The web page never needs to be framed within another page. In this scenario, the application should set the following HTTP response headers to prevent the page from being framed:\n\n```\nX-Frame-Options: deny\nContent-Security-Policy: frame-ancestors 'none';\n```\n\nScenario 2 - The web page only needs to be framed within other pages of the same origin. In this scenario, the application should set the following HTTP response headers to limit framing within the same domain:\n\n```\nX-Frame-Options: sameorigin\nContent-Security-Policy: frame-ancestors 'self';\n```\n\nScenario 3 - The web page needs to be framed within other pages from one or more trusted origins. In this scenario, the application should set the following HTTP response headers to allow framing within a trusted origin:\n\n```\nX-Frame-Options: allow-from https://www.example.com\nContent-Security-Policy: frame-ancestors https://www.example.com;\n```\n\nImportant note: The 'allow-from' directive can only contain one origin, which means it has to be dynamically updated based on strict allow-list validation if you need to allow framing from more than one trusted origin. Also, note that allow-from is not supported by all browsers, e.g., it is only supported by IE, Edge, and some older versions of Firefox. However, CSP with frame-ancestors is not supported by Internet Explorer 11 and older versions. Therefore, both headers above are required for legacy coverage. If your application doesn't support IE 11, then you only need to use the Content-Security-Policy.\n\nFrame-busting JavaScript code was often used in older applications to try to prevent clickjacking. However, most implementations can be bypassed by various means, and it is therefore not recommended as remediation. However, if a legacy application can't implement the X-Frame-Options or Content-Security-Policy headers, we would recommend a script that uses CSS to show the web page only if the top object is equal to self (i.e., the page is not being loaded into a frame). For more information and an example of such a script, see the following link:\nhttps://cheatsheetseries.owasp.org/cheatsheets/Clickjacking_Defense_Cheat_Sheet.html\n\n## References\n* Common Weakness Enumeration: [CWE-829](https://cwe.mitre.org/data/definitions/829.html)\n\n",
                                "text": "The `sandbox` attribute of an `iframe` is not set in HTML. This iframe loads content from a third-party site. If the JavaScript in that iframe is malicious or was compromised, an attacker can break out of the iframe, access the DOM of the main page, and mount a clickjacking or a phishing attack."
                            },
                            "properties": {
                                "security-severity": "6.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-829"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            }
                        },
                        {
                            "id": "sigma.missing_samesite_attribute_session_cookie:express|javascript",
                            "shortDescription": {
                                "text": "Sensitive Cookie with Improper SameSite Attribute"
                            },
                            "fullDescription": {
                                "text": "The `cookie.sameSite` option is either undefined or set to the insecure value `none` or `false`. In all three cases, the cookie's `SameSite` attribute protections are disabled, allowing the browser to send cookies in cross-site requests. An attacker can abuse this missing protection to facilitate cross-site request forgery (CSRF) attacks."
                            },
                            "help": {
                                "markdown": "\n## Description\nThe `cookie.sameSite` option is either undefined or set to the insecure value `none` or `false`. In all three cases, the cookie's `SameSite` attribute protections are disabled, allowing the browser to send cookies in cross-site requests. An attacker can abuse this missing protection to facilitate cross-site request forgery (CSRF) attacks.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DSensitive%20Cookie%20with%20Improper%20SameSite%20Attribute%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nThe server should explicitly set the SameSite attribute for all cookies containing sensitive data, such as session tokens. This can be accomplished either programmatically when setting Set-Cookie headers in responses or via deployment descriptors provided by various frameworks.\n\nThe setting \"SameSite=Strict\" provides the strongest protection against CSRF but the user experience works best when an application uses two different cookies, one for write-access that is locked down with \"SameSite=Strict\" and another for read-access that can have a more permissive setting, e.g., \"SameSite=Lax\". If the application only relies on one cookie for both read & write access, then the setting \"SameSite=Lax\" provides some protection against CSRF without too much negative impact on user experience. \n\nIt's worth noting that the definition of same-site is less restrictive than the definition of cross-origin, e.g., requests from other sub-domains are considered same-site although they are from a different origin. This means that even in browsers that fully support the \"SameSite\" cookie attribute, an attacker may still circumvent this protection if they can take over a subdomain or inject HTML or JavaScript into any subdomain of the same site. Therefore, relying on the \"SameSite\" attribute is not recommended as the sole defense against cross-site request forgery, it should instead be seen as a defense in depth mechanism that reduces the likelihood of CSRF.\n\n## References\n* Common Weakness Enumeration: [CWE-1275](https://cwe.mitre.org/data/definitions/1275.html)\n\n",
                                "text": "The `cookie.sameSite` option is either undefined or set to the insecure value `none` or `false`. In all three cases, the cookie's `SameSite` attribute protections are disabled, allowing the browser to send cookies in cross-site requests. An attacker can abuse this missing protection to facilitate cross-site request forgery (CSRF) attacks."
                            },
                            "properties": {
                                "security-severity": "3.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-1275"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            }
                        },
                        {
                            "id": "sigma.missing_secure_attribute_session_cookie:express|javascript",
                            "shortDescription": {
                                "text": "Secure Cookie Attribute Not Set"
                            },
                            "fullDescription": {
                                "text": "The configuration of the `client-sessions`, `cookie-session` or `express-session` library does not set the `secure` attribute of the session cookie. While web browsers send cookies with the `secure` attribute only over HTTPS, they do send cookies without it over HTTP. If an attacker can fool the victim's browser into sending an HTTP request to the vulnerable site (for example, with JavaScript code on a malicious page or with a phishing link), the victim's browser will send the vulnerable cookie in clear text. If the attacker can also intercept this network traffic, then they can steal the victim's session cookie and impersonate the victim."
                            },
                            "help": {
                                "markdown": "\n## Description\nThe configuration of the `client-sessions`, `cookie-session` or `express-session` library does not set the `secure` attribute of the session cookie. While web browsers send cookies with the `secure` attribute only over HTTPS, they do send cookies without it over HTTP. If an attacker can fool the victim's browser into sending an HTTP request to the vulnerable site (for example, with JavaScript code on a malicious page or with a phishing link), the victim's browser will send the vulnerable cookie in clear text. If the attacker can also intercept this network traffic, then they can steal the victim's session cookie and impersonate the victim.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DSecure%20Cookie%20Attribute%20Not%20Set%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nSet the 'Secure' attribute should on all cookies that contain sensitive data, especially those containing session IDs. The mitigation details depend on the application server, with some requiring programmatic configuration, where others can be configured through an administration interface. \n\nIf not already done, consider deploying HTTP Strict Transport Security (HSTS) headers to minimize the risk of plain-text HTTP requests to the application server.\n\n## References\n* Common Weakness Enumeration: [CWE-614](https://cwe.mitre.org/data/definitions/614.html)\n\n",
                                "text": "The configuration of the `client-sessions`, `cookie-session` or `express-session` library does not set the `secure` attribute of the session cookie. While web browsers send cookies with the `secure` attribute only over HTTPS, they do send cookies without it over HTTP. If an attacker can fool the victim's browser into sending an HTTP request to the vulnerable site (for example, with JavaScript code on a malicious page or with a phishing link), the victim's browser will send the vulnerable cookie in clear text. If the attacker can also intercept this network traffic, then they can steal the victim's session cookie and impersonate the victim."
                            },
                            "properties": {
                                "security-severity": "3.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-614"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            }
                        },
                        {
                            "id": "sigma.missing_tls:node_http_server|javascript",
                            "shortDescription": {
                                "text": "Cleartext Transmission of Sensitive Information"
                            },
                            "fullDescription": {
                                "text": "A web server is created using the insecure `HTTP` scheme. As a result, application data is transmitted over an insecure channel where it can be read and modified by attackers."
                            },
                            "help": {
                                "markdown": "\n## Description\nA web server is created using the insecure `HTTP` scheme. As a result, application data is transmitted over an insecure channel where it can be read and modified by attackers.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Encrypt the data with a reliable encryption scheme before transmitting.\n  2. When using web applications with SSL, use SSL for the entire session from login to logout, not just for the initial login page.\n  3. Use tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules.\n  4. Configure servers to use encrypted channels for communication, which may include SSL or other secure protocols.\n\n## References\n* Common Weakness Enumeration: [CWE-319](https://cwe.mitre.org/data/definitions/319.html)\n\n",
                                "text": "A web server is created using the insecure `HTTP` scheme. As a result, application data is transmitted over an insecure channel where it can be read and modified by attackers."
                            },
                            "properties": {
                                "security-severity": "3.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-319"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            }
                        },
                        {
                            "id": "sigma.reverse_tabnabbing:html|html",
                            "shortDescription": {
                                "text": "Insecure Link Target"
                            },
                            "fullDescription": {
                                "text": "The application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack."
                            },
                            "help": {
                                "markdown": "\n## Description\nThe application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DInsecure%20Link%20Target%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nTo prevent untrusted pages linked from the application from being able to manipulate the \"window.opener\" object, set the attribute rel=\"noopener noreferrer\" for each HTML link to external sites. In addition to preventing reverse tabnabbing attacks, it may also improve browser performance as the new page can be run in a separate process.\n\nWhen the rel attribute is set to \"noopener\", the \"window.opener\" object is \"null\" on the new page. Therefore, the attacker cannot manipulate the navigation of the original page.  Additionally, the \"noreferrer\" attribute tells the browser to not include referrer information when the new page is requested.\n\nFor links opened with JavaScript, add the values \"noopener\", \"noreferrer\" as the \"windowFeatures\" parameter in the \"window.open()\" function:\n```\nvar childWindow = window.open(url, name, \"noopener,noreferrer\");   \n```\nFor legacy browser support, you can also manually set the opener to \"null\":\n```\nchildWindow.opener = null;  \n```\n\n**Note**: The rel=\"noopener\" attribute setting is supported by most modern browsers such as Firefox, Chrome, Edge and Safari but is not supported by legacy browsers such as Internet Explorer. For the latest information on browser support, refer to https://caniuse.com/#search=rel.\n\n## References\n* Common Weakness Enumeration: [CWE-1022](https://cwe.mitre.org/data/definitions/1022.html)\n\n",
                                "text": "The application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack."
                            },
                            "properties": {
                                "security-severity": "3.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-1022"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            }
                        },
                        {
                            "id": "sigma.root_path_attribute_cookie:express|javascript",
                            "shortDescription": {
                                "text": "Broadly Scoped Session Cookie Path"
                            },
                            "fullDescription": {
                                "text": "The `client-sessions`, `cookie-session` or `express-session` library sets the `path` attribute on the session cookie to the root or doesn't set `path` attribute (default value is root). If the application is hosted beneath a subdirectory and the cookie is copied to the root, then applications in other subdirectories will have access to this cookie. If any of these applications become compromised, the cookie of the victim site can be stolen from this application."
                            },
                            "help": {
                                "markdown": "\n## Description\nThe `client-sessions`, `cookie-session` or `express-session` library sets the `path` attribute on the session cookie to the root or doesn't set `path` attribute (default value is root). If the application is hosted beneath a subdirectory and the cookie is copied to the root, then applications in other subdirectories will have access to this cookie. If any of these applications become compromised, the cookie of the victim site can be stolen from this application.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DBroadly%20Scoped%20Session%20Cookie%20Path%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\n\n\n## References\n* Common Weakness Enumeration: [CWE-668](https://cwe.mitre.org/data/definitions/668.html)\n\n",
                                "text": "The `client-sessions`, `cookie-session` or `express-session` library sets the `path` attribute on the session cookie to the root or doesn't set `path` attribute (default value is root). If the application is hosted beneath a subdirectory and the cookie is copied to the root, then applications in other subdirectories will have access to this cookie. If any of these applications become compromised, the cookie of the victim site can be stolen from this application."
                            },
                            "properties": {
                                "security-severity": "3.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-668"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            }
                        },
                        {
                            "id": "sigma.unsafe_eval:core_javascript|javascript",
                            "shortDescription": {
                                "text": "Eval Injection"
                            },
                            "fullDescription": {
                                "text": "The application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."
                            },
                            "help": {
                                "markdown": "\n## Description\nThe application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DEval%20Injection%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. If possible, refactor your code so that it does not need to use eval() at all.\n  2. Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n  3. Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180, CWE-181). Make sure that your application does not inadvertently decode the same input twice (CWE-174). Such errors could be used to bypass allowlist schemes by introducing dangerous inputs after they have been checked. Use libraries such as the OWASP ESAPI Canonicalization control.\n\nConsider performing repeated canonicalization until your input does not change any more. This will avoid double-decoding and similar scenarios, but it might inadvertently modify inputs that are allowed to contain properly-encoded dangerous content.\n\n## References\n* Common Weakness Enumeration: [CWE-676](https://cwe.mitre.org/data/definitions/676.html)\n\n",
                                "text": "The application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."
                            },
                            "properties": {
                                "security-severity": "3.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-676"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            }
                        },
                        {
                            "id": "sigma.unsafe_session_storage:express_session|javascript",
                            "shortDescription": {
                                "text": "Uncontrolled Resource Consumption"
                            },
                            "fullDescription": {
                                "text": "The session storage that the `express-session` module provides explicitly or by default is insecure. This type of memory storage leaks memory under most conditions. An attacker may create numerous active sessions and cause a Denial-of-Service situation."
                            },
                            "help": {
                                "markdown": "\n## Description\nThe session storage that the `express-session` module provides explicitly or by default is insecure. This type of memory storage leaks memory under most conditions. An attacker may create numerous active sessions and cause a Denial-of-Service situation.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DUncontrolled%20Resource%20Consumption%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control model will help prevent such attacks from occurring in the first place. The login application should be protected against DoS attacks as much as possible. Limiting the database access, perhaps by caching result sets, can help minimize the resources expended. To further limit the potential for a DoS attack, consider tracking the rate of requests received from users and blocking requests that exceed a defined rate threshold.\n  2. Mitigation of resource exhaustion attacks requires that the target system either:\n\n    * recognizes the attack and denies that user further access for a given amount of time, or\n    * uniformly throttles all requests in order to make it more difficult to consume resources more quickly than they can again be freed.\n\nThe first of these solutions is an issue in itself though, since it may allow attackers to prevent the use of the system by a particular valid user. If the attacker impersonates the valid user, they may be able to prevent the user from accessing the server in question.\n\nThe second solution is simply difficult to effectively institute -- and even when properly done, it does not provide a full solution. It simply makes the attack require more resources on the part of the attacker.\n\n  3. Ensure that protocols have specific limits of scale placed on them.\n  4. Ensure that all failures in resource allocation place the system into a safe posture.\n\n## References\n* Common Weakness Enumeration: [CWE-922](https://cwe.mitre.org/data/definitions/922.html)\n\n",
                                "text": "The session storage that the `express-session` module provides explicitly or by default is insecure. This type of memory storage leaks memory under most conditions. An attacker may create numerous active sessions and cause a Denial-of-Service situation."
                            },
                            "properties": {
                                "security-severity": "6.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-922"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            }
                        },
                        {
                            "id": "sigma.verbose_server_banner:express|javascript",
                            "shortDescription": {
                                "text": "Verbose Server Banner"
                            },
                            "fullDescription": {
                                "text": "HTTP responses contain an `X-Powered-By` header that reveals information about the server which helps attackers exploit known vulnerabilities or craft more targeted exploits."
                            },
                            "help": {
                                "markdown": "\n## Description\nHTTP responses contain an `X-Powered-By` header that reveals information about the server which helps attackers exploit known vulnerabilities or craft more targeted exploits.\n\n[Click Here To See More Details in Polaris](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DVerbose%20Server%20Banner%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nVerbose server information should be removed from all HTTP responses. This can be performed by modifying the server's configuration files or through the use and configuration of a web application firewall.\n\n## References\n* Common Weakness Enumeration: [CWE-201](https://cwe.mitre.org/data/definitions/201.html)\n\n",
                                "text": "HTTP responses contain an `X-Powered-By` header that reveals information about the server which helps attackers exploit known vulnerabilities or craft more targeted exploits."
                            },
                            "properties": {
                                "security-severity": "3.8",
                                "tags": [
                                    "security",
                                    "static_analysis",
                                    "external/cwe/cwe-201"
                                ]
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            }
                        }
                    ]
                }
            },
            "results": [
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/8AED90BFD85B397B76D7725D74579AFF?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DImproper%20Isolation%20or%20Compartmentalization%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "docker-compose.yml"
                                },
                                "region": {
                                    "startLine": 5
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.container_filesystem_write:docker_compose|yaml",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "b1d84f0b96dc9f7d02f079b24e4ef76e3565926946ebe78f04174fd5b15f5c4e"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 5
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 5
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/7A41A7C019B34DF61C4AA8CC990BEAA5?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DImproper%20Isolation%20or%20Compartmentalization%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe docker service container is configured to permit writing to the root filesystem. This makes some security attack vectors such as privilege escalation, denial-of-service or authorization bypass possible since the container instance's filesystem can be tampered with."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "docker-compose.yml"
                                },
                                "region": {
                                    "startLine": 14
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.container_filesystem_write:docker_compose|yaml",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "e24896afd26a4a60b8945fa3c6e7401a8154da0a01acb3f9a183e42f4b4b9b73"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 14
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 14
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/80024AB6E9C660F167261BEC4181CE39?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DKubernetes%20Privilege%20Escalation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "docker-compose.yml"
                                },
                                "region": {
                                    "startLine": 14
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.container_privilege_escalation_allowed:docker_compose|yaml",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "57dd86128b942bb5115de9e72c4c9cd2730f07e4b5fb072cb642f1ad2179b2fc"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 14
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 14
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/752810C8C41CAF99CD85F63431487A69?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DKubernetes%20Privilege%20Escalation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker Compose file sets the `no-new-privileges` attribute to `false` or omits it as the default value is `false`. This doesn't restrict the container from acquiring additional privileges via SUID or SGID bits. This allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "docker-compose.yml"
                                },
                                "region": {
                                    "startLine": 5
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.container_privilege_escalation_allowed:docker_compose|yaml",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "aaf59ba960ae2e94a62ba65319fbf1568578157f543c008a59bd520cb73ae803"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 5
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 5
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/7D51153C989C21B7B8D4807C83B7EBA4?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DLeast%20Privilege%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "docker-compose.yml"
                                },
                                "region": {
                                    "startLine": 5
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.container_requesting_net_raw:docker_compose|yaml",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "b71405727048a0ae02c022c8876d845d33121c05fb7f0f41475244fc835de3fc"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 5
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 5
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/F2EF9B90FC695B91346428FEEC794096?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DLeast%20Privilege%20Violation%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker container requests the `NET_RAW` capability, either explicitly or by default, granting access to the host's network interfaces."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "docker-compose.yml"
                                },
                                "region": {
                                    "startLine": 14
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.container_requesting_net_raw:docker_compose|yaml",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "34bd71b3fe45171df7771903b286f5cb637838bf8c36ae23df5989bf87ca8e7c"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 14
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 14
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/5707C76EFE36C2D4973BAC0CA0C06B6C?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DClient%20Store%20Exposure%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dartifacts%2Fcert%2Fserver.key)\n\nA private SSH key is exposed in the application repository or codebase."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "artifacts/cert/server.key"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.exposed_secret:ssh_keys|unknown",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "9c06c3373fa9f10428acce0feda84cde6d36705c88b00912f34a8d5e2d0902af"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "artifacts/cert/server.key"
                                                    },
                                                    "region": {
                                                        "startLine": 1
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "artifacts/cert/server.key"
                                                    },
                                                    "region": {
                                                        "startLine": 1
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/61C8DAC9C4CE88449D7B7C8D51119BDA?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DExpression%20Escaping%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dserver.js)\n\nSetting the `autoescape` attribute to `false` disables the escaping mechanism of the Swig template engine. This may lead to XSS attack if untrusted data is not properly validated and escaped."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "server.js"
                                },
                                "region": {
                                    "startLine": 137
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.expression_escaping_disabled:swig|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "616532443f8b80925eaf206e276b131c6fef5b077fe1666143bab584de1798d0"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 137
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 137
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/F9705DBDE6ADAEDB56B42CF44B24A5D2?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DHard-coded%20Secrets%20in%20Server-side%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dconfig%2Fenv%2Fdevelopment.js)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "config/env/development.js"
                                },
                                "region": {
                                    "startLine": 6
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.hardcoded_secret:pattern_low|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "fa04de61e591bb6a109fe8d9dce45091e0aa3cc80e2c3f07f9264edfc537dca3"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "config/env/development.js"
                                                    },
                                                    "region": {
                                                        "startLine": 6
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "config/env/development.js"
                                                    },
                                                    "region": {
                                                        "startLine": 6
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/7C4B9371045310E91C329EFBDF393E03?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DHard-coded%20Secrets%20in%20Server-side%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dconfig%2Fenv%2Fall.js)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "config/env/all.js"
                                },
                                "region": {
                                    "startLine": 8
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.hardcoded_secret:pattern_low|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "2fb7da11221d440a18bb7d24d81d854aba038f742a31b6797bd06a6868b1ffb2"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "config/env/all.js"
                                                    },
                                                    "region": {
                                                        "startLine": 8
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "config/env/all.js"
                                                    },
                                                    "region": {
                                                        "startLine": 8
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/8A7191C1E5DB0FF114CBE1E1DE00E2AA?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DHard-coded%20Secrets%20in%20Server-side%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dconfig%2Fenv%2Ftest.js)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "config/env/test.js"
                                },
                                "region": {
                                    "startLine": 6
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.hardcoded_secret:pattern_low|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "3a2843b611fce42d4ac917bd73b982725a1e2ccd5b21d03b08b84eeeccb08637"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "config/env/test.js"
                                                    },
                                                    "region": {
                                                        "startLine": 6
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "config/env/test.js"
                                                    },
                                                    "region": {
                                                        "startLine": 6
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/23D360CE77515771D8B4BA3BC6D9844C?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DHard-coded%20Secrets%20in%20Server-side%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dartifacts%2Fdb-reset.js)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "artifacts/db-reset.js"
                                },
                                "region": {
                                    "startLine": 27
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.hardcoded_secret:pattern_low|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "4b2a2f0a47dc8cb8faf5b592dc6f3c4379dea6de37b776b4406055aa641d2ce5"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "artifacts/db-reset.js"
                                                    },
                                                    "region": {
                                                        "startLine": 27
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "artifacts/db-reset.js"
                                                    },
                                                    "region": {
                                                        "startLine": 27
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/880155DF2BA28A2F5FBC8A597078580F?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DHard-coded%20Secrets%20in%20Server-side%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dartifacts%2Fdb-reset.js)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "artifacts/db-reset.js"
                                },
                                "region": {
                                    "startLine": 18
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.hardcoded_secret:pattern_low|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "e78089d5b57839f015a3c1ad71b6c662d8b0acd74d5817efbda4e86a9a2fc3e9"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "artifacts/db-reset.js"
                                                    },
                                                    "region": {
                                                        "startLine": 18
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "artifacts/db-reset.js"
                                                    },
                                                    "region": {
                                                        "startLine": 18
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/ABAA356CEDA68B6B499A9E23A5EEA80B?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DHard-coded%20Secrets%20in%20Server-side%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2Fsecurity%2Fprofile-test.js)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "test/security/profile-test.js"
                                },
                                "region": {
                                    "startLine": 37
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.hardcoded_secret:pattern_low|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "69a094ac1999725c32ed863c6ed804eb2451f5bf5b79d84470e24526b0dc1cbb"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "test/security/profile-test.js"
                                                    },
                                                    "region": {
                                                        "startLine": 37
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "test/security/profile-test.js"
                                                    },
                                                    "region": {
                                                        "startLine": 37
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/88B738A11109D609A2EB9AEDD4798933?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DHard-coded%20Secrets%20in%20Server-side%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dartifacts%2Fdb-reset.js)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "artifacts/db-reset.js"
                                },
                                "region": {
                                    "startLine": 35
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.hardcoded_secret:pattern_low|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "fb738614a569612f0636c4b2fe277bc55af5ca99a037fe51f9fa70557df812b8"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "artifacts/db-reset.js"
                                                    },
                                                    "region": {
                                                        "startLine": 35
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "artifacts/db-reset.js"
                                                    },
                                                    "region": {
                                                        "startLine": 35
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/FB8A771D4E5240492C07B8DA614FC979?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DHard-coded%20Secrets%20in%20Server-side%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2Fe2e%2Ffixtures%2Fusers%2Fnew_user.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "test/e2e/fixtures/users/new_user.json"
                                },
                                "region": {
                                    "startLine": 5
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.hardcoded_secret:pattern_low|json",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "39825d550417152e4195c3f60e78fce096a94faadc41346678f0da4e2646b1fa"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "test/e2e/fixtures/users/new_user.json"
                                                    },
                                                    "region": {
                                                        "startLine": 5
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "test/e2e/fixtures/users/new_user.json"
                                                    },
                                                    "region": {
                                                        "startLine": 5
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/FB13CC4C4FD30EA01855CD97A44A3101?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DHard-coded%20Secrets%20in%20Server-side%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2Fe2e%2Ffixtures%2Fusers%2Fadmin.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "test/e2e/fixtures/users/admin.json"
                                },
                                "region": {
                                    "startLine": 3
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.hardcoded_secret:pattern_low|json",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "ac3fe6c14ee729c8201fa356110f8d62fa259feb4d49c51011483101e14027b8"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "test/e2e/fixtures/users/admin.json"
                                                    },
                                                    "region": {
                                                        "startLine": 3
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "test/e2e/fixtures/users/admin.json"
                                                    },
                                                    "region": {
                                                        "startLine": 3
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/65088C0D7227342DA968439CD592C973?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DHard-coded%20Secrets%20in%20Server-side%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtest%2Fe2e%2Ffixtures%2Fusers%2Fuser.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "test/e2e/fixtures/users/user.json"
                                },
                                "region": {
                                    "startLine": 3
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.hardcoded_secret:pattern_low|json",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "1d2cf808bdb802364b3a89b5b766a5e26617c315a71d36652dff3e5c32531b58"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "test/e2e/fixtures/users/user.json"
                                                    },
                                                    "region": {
                                                        "startLine": 3
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "test/e2e/fixtures/users/user.json"
                                                    },
                                                    "region": {
                                                        "startLine": 3
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/8596B13ECACE40804E17336F80958BAE?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "docker-compose.yml"
                                },
                                "region": {
                                    "startLine": 14
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.least_privilege_violation:docker_compose|yaml",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "ed09000a4e45f38029bb093ec0acc19da02ffc99ed25a11c67ba04bd0a1bc281"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 14
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 14
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/98E4733E80B250A35B41C9E834089B02?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DImproper%20Access%20Control%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Ddocker-compose.yml)\n\nThe Docker container is not configured to drop all default capabilities and then add only required one. Thus the container may be granted excessive privileges which violate the least privilege principle."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "docker-compose.yml"
                                },
                                "region": {
                                    "startLine": 5
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.least_privilege_violation:docker_compose|yaml",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "ae1a17c3331e2f20277eccc251b0fadf532129d90f8c16feb4bf6b08033c9f80"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 5
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "docker-compose.yml"
                                                    },
                                                    "region": {
                                                        "startLine": 5
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/2074B16470A3F2B65AC718C1700024CA?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DClickjacking%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dapp%2Fviews%2Ftutorial%2Fa3.html)\n\nThe `sandbox` attribute of an `iframe` is not set in HTML. This iframe loads content from a third-party site. If the JavaScript in that iframe is malicious or was compromised, an attacker can break out of the iframe, access the DOM of the main page, and mount a clickjacking or a phishing attack."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "app/views/tutorial/a3.html"
                                },
                                "region": {
                                    "startLine": 157
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.missing_iframe_sandbox:html|html",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "6666158726c6e184e6fdd3531eae72097733458494c77c2f8cbb8c2f5dccc374"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a3.html"
                                                    },
                                                    "region": {
                                                        "startLine": 157
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a3.html"
                                                    },
                                                    "region": {
                                                        "startLine": 157
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/D387E76D690B0C29464D6244A044F038?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DClickjacking%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dapp%2Fviews%2Ftutorial%2Fa10.html)\n\nThe `sandbox` attribute of an `iframe` is not set in HTML. This iframe loads content from a third-party site. If the JavaScript in that iframe is malicious or was compromised, an attacker can break out of the iframe, access the DOM of the main page, and mount a clickjacking or a phishing attack."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "app/views/tutorial/a10.html"
                                },
                                "region": {
                                    "startLine": 31
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.missing_iframe_sandbox:html|html",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "6fdeaa5a738886c479cb4d956b0cb9b03cee5ad490c4fbe2a5e3d022e088dac9"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a10.html"
                                                    },
                                                    "region": {
                                                        "startLine": 31
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a10.html"
                                                    },
                                                    "region": {
                                                        "startLine": 31
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/B21BEE6C877B49F15F6B44267E423E2A?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DClickjacking%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dapp%2Fviews%2Ftutorial%2Fa7.html)\n\nThe `sandbox` attribute of an `iframe` is not set in HTML. This iframe loads content from a third-party site. If the JavaScript in that iframe is malicious or was compromised, an attacker can break out of the iframe, access the DOM of the main page, and mount a clickjacking or a phishing attack."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "app/views/tutorial/a7.html"
                                },
                                "region": {
                                    "startLine": 30
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.missing_iframe_sandbox:html|html",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "bbb68f95db0aa1f3874ff56adbe6bc30f6d8254fca02533da0177c7a04d0a6a2"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a7.html"
                                                    },
                                                    "region": {
                                                        "startLine": 30
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a7.html"
                                                    },
                                                    "region": {
                                                        "startLine": 30
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/7022F324FCECA1F009BE9C3B8145F583?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DClickjacking%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dapp%2Fviews%2Ftutorial%2Fa4.html)\n\nThe `sandbox` attribute of an `iframe` is not set in HTML. This iframe loads content from a third-party site. If the JavaScript in that iframe is malicious or was compromised, an attacker can break out of the iframe, access the DOM of the main page, and mount a clickjacking or a phishing attack."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "app/views/tutorial/a4.html"
                                },
                                "region": {
                                    "startLine": 32
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.missing_iframe_sandbox:html|html",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "7226828b9d9315f3f89512611ed1580d77fc459c1e21280e985566f775860b57"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a4.html"
                                                    },
                                                    "region": {
                                                        "startLine": 32
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a4.html"
                                                    },
                                                    "region": {
                                                        "startLine": 32
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/37D5AD3C82FC58EDE126043457F3B106?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DClickjacking%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dapp%2Fviews%2Ftutorial%2Fssrf.html)\n\nThe `sandbox` attribute of an `iframe` is not set in HTML. This iframe loads content from a third-party site. If the JavaScript in that iframe is malicious or was compromised, an attacker can break out of the iframe, access the DOM of the main page, and mount a clickjacking or a phishing attack."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "app/views/tutorial/ssrf.html"
                                },
                                "region": {
                                    "startLine": 23
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.missing_iframe_sandbox:html|html",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "04e530b1040533d15c4f5e747f8514a219da6ed81ee834c2ba62d02efb45fe68"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/ssrf.html"
                                                    },
                                                    "region": {
                                                        "startLine": 23
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/ssrf.html"
                                                    },
                                                    "region": {
                                                        "startLine": 23
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/80638C49EB45E54E9DB5C2B838FB75F9?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DClickjacking%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dapp%2Fviews%2Ftutorial%2Fa8.html)\n\nThe `sandbox` attribute of an `iframe` is not set in HTML. This iframe loads content from a third-party site. If the JavaScript in that iframe is malicious or was compromised, an attacker can break out of the iframe, access the DOM of the main page, and mount a clickjacking or a phishing attack."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "app/views/tutorial/a8.html"
                                },
                                "region": {
                                    "startLine": 42
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.missing_iframe_sandbox:html|html",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "ae3edfeed61510a7b77b856de02b4702cb81fc9de51d264f72cbc81aedc12693"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a8.html"
                                                    },
                                                    "region": {
                                                        "startLine": 42
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a8.html"
                                                    },
                                                    "region": {
                                                        "startLine": 42
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/2DBF1F3DB8E581DE784563D087309254?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DClickjacking%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dapp%2Fviews%2Ftutorial%2Fa5.html)\n\nThe `sandbox` attribute of an `iframe` is not set in HTML. This iframe loads content from a third-party site. If the JavaScript in that iframe is malicious or was compromised, an attacker can break out of the iframe, access the DOM of the main page, and mount a clickjacking or a phishing attack."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "app/views/tutorial/a5.html"
                                },
                                "region": {
                                    "startLine": 86
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.missing_iframe_sandbox:html|html",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "1e705bd7b02a59a8f7f0cfbf3b760e34c7f35a3450a26a622b5b1851aaf776cb"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a5.html"
                                                    },
                                                    "region": {
                                                        "startLine": 86
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a5.html"
                                                    },
                                                    "region": {
                                                        "startLine": 86
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/C060651171D342580BD7A88FC20DD0B2?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DClickjacking%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dapp%2Fviews%2Ftutorial%2Fa1.html)\n\nThe `sandbox` attribute of an `iframe` is not set in HTML. This iframe loads content from a third-party site. If the JavaScript in that iframe is malicious or was compromised, an attacker can break out of the iframe, access the DOM of the main page, and mount a clickjacking or a phishing attack."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "app/views/tutorial/a1.html"
                                },
                                "region": {
                                    "startLine": 98
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.missing_iframe_sandbox:html|html",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "b4c8d12879f3903eac9e152ba99cae0e91c16545995f9ec7b40cf34f73489b3b"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a1.html"
                                                    },
                                                    "region": {
                                                        "startLine": 98
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a1.html"
                                                    },
                                                    "region": {
                                                        "startLine": 98
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/525EAF0F67171EFD631D6027FBBA9BE1?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DSensitive%20Cookie%20with%20Improper%20SameSite%20Attribute%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dserver.js)\n\nThe `cookie.sameSite` option is either undefined or set to the insecure value `none` or `false`. In all three cases, the cookie's `SameSite` attribute protections are disabled, allowing the browser to send cookies in cross-site requests. An attacker can abuse this missing protection to facilitate cross-site request forgery (CSRF) attacks."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "server.js"
                                },
                                "region": {
                                    "startLine": 78
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.missing_samesite_attribute_session_cookie:express|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "1d7a3579bd75a848a6cbce26d1a48449e7e545b83ae8f87411ed239743e669de"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 78
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 78
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/7948BC12A8DE0CE5274F7898BAB33338?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DSecure%20Cookie%20Attribute%20Not%20Set%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dserver.js)\n\nThe configuration of the `client-sessions`, `cookie-session` or `express-session` library does not set the `secure` attribute of the session cookie. While web browsers send cookies with the `secure` attribute only over HTTPS, they do send cookies without it over HTTP. If an attacker can fool the victim's browser into sending an HTTP request to the vulnerable site (for example, with JavaScript code on a malicious page or with a phishing link), the victim's browser will send the vulnerable cookie in clear text. If the attacker can also intercept this network traffic, then they can steal the victim's session cookie and impersonate the victim."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "server.js"
                                },
                                "region": {
                                    "startLine": 78
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.missing_secure_attribute_session_cookie:express|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "78552c0d86cd479178055346a4d3ef5a55bbbb4228d42ec9982335c9612cca44"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 78
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 78
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/318840F24761ABC93B939D53ED469859?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dserver.js)\n\nA web server is created using the insecure `HTTP` scheme. As a result, application data is transmitted over an insecure channel where it can be read and modified by attackers."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "server.js"
                                },
                                "region": {
                                    "startLine": 145
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.missing_tls:node_http_server|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "ae6ffcbf6e5b0fef5357e10a427dc19412da9899c86f549a6fc6e7c0e59b7312"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 145
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 145
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/CE6C9E92E9D974BEE69EBE1CEBFE8641?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DInsecure%20Link%20Target%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dapp%2Fviews%2Ftutorial%2Fa1.html)\n\nThe application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "app/views/tutorial/a1.html"
                                },
                                "region": {
                                    "startLine": 179
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.reverse_tabnabbing:html|html",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "70e90ec17d8509da2f181b58fd22688e1e386df3e34be26ce404a0923e244fbb"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a1.html"
                                                    },
                                                    "region": {
                                                        "startLine": 179
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a1.html"
                                                    },
                                                    "region": {
                                                        "startLine": 179
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/CC3E4FAD3483591EAB05ACB4940DC6F5?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DInsecure%20Link%20Target%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dapp%2Fviews%2Flogin.html)\n\nThe application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "app/views/login.html"
                                },
                                "region": {
                                    "startLine": 46
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.reverse_tabnabbing:html|html",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "056d96efbec4bfc318d8aba4215ae703a85ba0740d7f79d68e193558f57c4ad5"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/login.html"
                                                    },
                                                    "region": {
                                                        "startLine": 46
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/login.html"
                                                    },
                                                    "region": {
                                                        "startLine": 46
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/94C5419C036C4FCC06DFCFF7F976C99B?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DInsecure%20Link%20Target%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dapp%2Fviews%2Ftutorial%2Fa8.html)\n\nThe application uses an anchor tag whose `target` attribute is set to `_blank`, but the `rel` attribute is not set with the `noopener` value. The page opened from that target link may have the access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\nNote that most contemporary browsers add the `noopener` value to the `rel` automatically by default. Thus, only users with older versions of browsers are targets for this phishing attack."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "app/views/tutorial/a8.html"
                                },
                                "region": {
                                    "startLine": 59
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.reverse_tabnabbing:html|html",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "88454b30453187aef35e2f644526305a06566678307e3b7d178a7e7fb4cacd24"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a8.html"
                                                    },
                                                    "region": {
                                                        "startLine": 59
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/views/tutorial/a8.html"
                                                    },
                                                    "region": {
                                                        "startLine": 59
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/7EDA88D7778428B5E7A67E4043E06C95?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DBroadly%20Scoped%20Session%20Cookie%20Path%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dserver.js)\n\nThe `client-sessions`, `cookie-session` or `express-session` library sets the `path` attribute on the session cookie to the root or doesn't set `path` attribute (default value is root). If the application is hosted beneath a subdirectory and the cookie is copied to the root, then applications in other subdirectories will have access to this cookie. If any of these applications become compromised, the cookie of the victim site can be stolen from this application."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "server.js"
                                },
                                "region": {
                                    "startLine": 78
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.root_path_attribute_cookie:express|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "46dfd0209fc9d4d0a75308c9c8d25bb7175f2deba35d9665eca00e0635be426f"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 78
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 78
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/F5DCAD1D0E0A212C437235758C7AF1BD?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DEval%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dapp%2Froutes%2Fcontributions.js)\n\nThe application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "app/routes/contributions.js"
                                },
                                "region": {
                                    "startLine": 34
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.unsafe_eval:core_javascript|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "8e06fa1e7531b7418b39aeb22674ec34780e287e3db96ae5a9288fcd5f4477cc"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/routes/contributions.js"
                                                    },
                                                    "region": {
                                                        "startLine": 34
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "app/routes/contributions.js"
                                                    },
                                                    "region": {
                                                        "startLine": 34
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/D4E44782F7DEEFC25ECAE5F2ED53432F?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DUncontrolled%20Resource%20Consumption%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dserver.js)\n\nThe session storage that the `express-session` module provides explicitly or by default is insecure. This type of memory storage leaks memory under most conditions. An attacker may create numerous active sessions and cause a Denial-of-Service situation."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "server.js"
                                },
                                "region": {
                                    "startLine": 78
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.unsafe_session_storage:express_session|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "bdf94b33a585defc5296a1125f5479629e3e9d676da5a4ec6ff6158adc219fb9"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 78
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 78
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "message": {
                        "text": "[\\[See in Polaris\\]](https://pim.dev.polaris.blackduck.com/portfolio/portfolios/c8003202-7753-40f9-9125-7a4fb82fa1cb/portfolio-items/7c83cf52-32e1-4e9c-9421-4841b947fb55/projects/ca44c961-5c06-4254-a5bb-0a812c391cda/issues/5E1E714AC4A6BD8CDD6C095E4DB79E48?branchId=b62d4097-a954-474a-95c0-085b6b0c9a1a&filter=issueType%3Alocalized-name%3DVerbose%20Server%20Banner%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dserver.js)\n\nHTTP responses contain an `X-Powered-By` header that reveals information about the server which helps attackers exploit known vulnerabilities or craft more targeted exploits."
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "server.js"
                                },
                                "region": {
                                    "startLine": 15
                                }
                            }
                        }
                    ],
                    "ruleId": "sigma.verbose_server_banner:express|javascript",
                    "partialFingerprints": {
                        "ruleIdLocationHash/v1": "a922b3e66482ec590a0249fe7e859ab9113a44cea5d39dba201e56f5a51f21c1"
                    },
                    "codeFlows": [
                        {
                            "threadFlows": [
                                {
                                    "locations": [
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 15
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        },
                                        {
                                            "location": {
                                                "physicalLocation": {
                                                    "artifactLocation": {
                                                        "uri": "server.js"
                                                    },
                                                    "region": {
                                                        "startLine": 15
                                                    }
                                                },
                                                "message": {
                                                    "text": ""
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    "version": "2.1.0"
}